// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PatientWarningApp.Data.DbContexts;

namespace PatientWarningApp.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20211125121941_DBInit")]
    partial class DBInit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.12");

            modelBuilder.Entity("PatientWarningApp.Data.Entities.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("HouseNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("PostCode")
                        .HasColumnType("longtext");

                    b.Property<string>("StreetName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("PatientWarningApp.Data.Entities.Patient", b =>
                {
                    b.Property<int>("PatientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("DOB")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("PatientId")
                        .HasName("PK_Patients");

                    b.HasIndex("AddressId");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("PatientWarningApp.Data.Entities.PatientAccount", b =>
                {
                    b.Property<int>("PatientAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<sbyte>("IsAdmin")
                        .HasColumnType("tinyint");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<int>("PractitionerAccountId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("PatientAccountId")
                        .HasName("PK_PatientAccounts");

                    b.HasIndex("PractitionerAccountId");

                    b.ToTable("PatientAccounts");

                    b.HasData(
                        new
                        {
                            PatientAccountId = 1,
                            Email = "Patient1@example.com",
                            Id = 1,
                            IsAdmin = (sbyte)0,
                            Password = "changeMe",
                            PatientId = 0,
                            PractitionerAccountId = 1,
                            Username = "Username"
                        },
                        new
                        {
                            PatientAccountId = 2,
                            Email = "Patient1@example.com",
                            Id = 2,
                            IsAdmin = (sbyte)0,
                            Password = "changeMe",
                            PatientId = 0,
                            PractitionerAccountId = 0,
                            Username = "Username"
                        });
                });

            modelBuilder.Entity("PatientWarningApp.Data.Entities.Practitioner", b =>
                {
                    b.Property<int>("PractitionerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("DOB")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("PractitionerId")
                        .HasName("PK_Practitioners");

                    b.HasIndex("AddressId");

                    b.HasIndex("FirstName")
                        .HasDatabaseName("Idx_FirstName");

                    b.HasIndex("LastName")
                        .HasDatabaseName("Idx_LastName");

                    b.ToTable("Practitioners");

                    b.HasData(
                        new
                        {
                            PractitionerId = 1,
                            DOB = "08/08/2000",
                            FirstName = "Abigail",
                            Gender = "Female",
                            Id = 1,
                            LastName = "Knowles",
                            MobileNumber = "1234567890",
                            Title = "Miss"
                        });
                });

            modelBuilder.Entity("PatientWarningApp.Data.Entities.PractitionerAccount", b =>
                {
                    b.Property<int>("PractitionerAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<sbyte>("IsAdmin")
                        .HasColumnType("tinyint");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("PractitionerAccountId")
                        .HasName("PK_PractitionerAccounts");

                    b.ToTable("PractitionerAccounts");

                    b.HasData(
                        new
                        {
                            PractitionerAccountId = 1,
                            Email = "richardsi@example.com",
                            Id = 1,
                            IsAdmin = (sbyte)1,
                            Password = "password",
                            Username = "abigail"
                        });
                });

            modelBuilder.Entity("PatientWarningApp.Data.Entities.Patient", b =>
                {
                    b.HasOne("PatientWarningApp.Data.Entities.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.Navigation("Address");
                });

            modelBuilder.Entity("PatientWarningApp.Data.Entities.PatientAccount", b =>
                {
                    b.HasOne("PatientWarningApp.Data.Entities.PractitionerAccount", null)
                        .WithMany("PatientAccounts")
                        .HasForeignKey("PractitionerAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PatientWarningApp.Data.Entities.Practitioner", b =>
                {
                    b.HasOne("PatientWarningApp.Data.Entities.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.Navigation("Address");
                });

            modelBuilder.Entity("PatientWarningApp.Data.Entities.PractitionerAccount", b =>
                {
                    b.Navigation("PatientAccounts");
                });
#pragma warning restore 612, 618
        }
    }
}
